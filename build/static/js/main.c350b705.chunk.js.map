{"version":3,"sources":["static/img/404.jpg","constants/routes.ts","components/Header.tsx","pages/Landing.tsx","store/firebase/index.ts","components/Alert.tsx","hooks/index.ts","models/Dev.ts","pages/SignUp.tsx","models/User.ts","pages/SignIn.tsx","components/DevProfile.tsx","pages/Developers.tsx","pages/NotFound.tsx","types/TimePeriod.ts","pages/Profile.tsx","components/FormHeader.tsx","constants/statuses.ts","types/Links.ts","types/Alert.ts","pages/EditProfile.tsx","pages/Dashboard.tsx","pages/AddExperience.tsx","pages/AddEducation.tsx","models/Post.ts","pages/Post.tsx","pages/Posts.tsx","router/PrivateRoute.tsx","router/Router.tsx","components/NavBar.tsx","store/index.ts","services/firebase/index.ts","store/firebase/config.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Routes","Header","title","lead","icon","className","faUser","faConnectdevelop","faCodeBranch","faGraduationCap","faExclamationTriangle","RenderIcon","Landing","to","SIGN_UP","SIGN_IN","selectAuthState","state","firebase","auth","enhance","compose","connect","profile","withFirebase","Alert","text","color","useForm","initFormData","useState","formData","setFormData","handleChange","e","target","name","value","handleCheckboxesChange","checked","resetForm","getDescription","status","company","Dev","id","isActive","displayName","avatarUrl","description","location","skills","github","links","website","instagram","facebook","linkedin","twitter","youtube","bio","experiences","educations","repos","Date","isEmpty","isLoaded","error","setError","email","password","password2","isDisabled","DASHBOARD","message","type","onClick","login","provider","then","currentUser","exists","firestore","collection","where","get","docs","forEach","doc","undefined","data","updateProfile","useSet","merge","catch","err","onSubmit","preventDefault","createUser","createdAt","newUser","onChange","placeholder","required","autoFocus","minLength","disabled","DevProfile","src","alt","PROFILE","map","s","i","key","faCheck","firestoreConnect","props","developers","ordered","users","dev","NotFound","parseDate","date","moment","format","getTimePeriod","from","Profile","fn","console","log","renderSocialIcon","faFacebook","faGithub","faInstagram","faLinkedin","faTwitter","faYoutube","faGlobe","DEVELOPERS","Object","entries","sort","webAddress","href","rel","size","length","require","exp","position","edu","school","degree","field","r","link","faStar","faEye","ProfileContainer","useParams","Component","FormHeader","Statuses","parseLink","slice","formAlert","show","showLinks","setShowLinks","alert","setAlert","toString","updatedDev","githubUsername","split","makeProfile","defaultValue","EDIT_PROFILE","faUserCircle","ADD_EXPERIENCE","faBlackTie","ADD_EDUCATION","filter","logout","faUserSlash","current","newExp","makeExperience","cols","rows","newEdu","makeEducation","dummyPost","userID","picture","comments","likes","PostPage","post","c","Posts","posts","faThumbsUp","faThumbsDown","PrivateRoute","component","exact","path","rest","useSelector","render","pathname","Router","LANDING","SignUp","SignIn","Developers","EditProfile","Dashboard","AddExperience","AddEducation","POST","POSTS","publicLinks","data-testid","privateLinks","faSignOutAlt","RenderLinks","faCode","store","configureStore","reducer","firebaseReducer","firestoreReducer","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","rrfProps","config","userProfile","useFirestoreForProfile","dispatch","createFirestoreInstance","AuthApp","App","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c350b705.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/404.a651ce01.jpg\";","/**\n * Register all Routes here for easy future modification.\n * Paths must start with '/'\n */\nenum Routes {\n  LANDING = '/',\n  SIGN_UP = '/signup',\n  SIGN_IN = '/signin',\n  DEVELOPERS = '/developers',\n  PROFILE = '/profile',\n  EDIT_PROFILE = '/edit-profile',\n  DASHBOARD = '/dashboard',\n  ADD_EXPERIENCE = '/add-experience',\n  ADD_EDUCATION = '/add-education',\n  POST = '/post',\n  POSTS = '/posts',\n}\n\nexport default Routes;\n","import React, {FC} from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {\n  faUser,\n  faCodeBranch,\n  faGraduationCap,\n  faExclamationTriangle,\n} from '@fortawesome/free-solid-svg-icons';\nimport {faConnectdevelop} from '@fortawesome/free-brands-svg-icons';\n\ninterface IProps {\n  title: string;\n  lead: string;\n  icon?: string;\n}\n\n/**\n * Header component\n * @param title of the page\n * @param lead description of the content\n * @param icon  to display (optional and default to faUser)\n */\nconst Header: FC<IProps> = ({title, lead, icon = 'faUser'}) => {\n  const RenderIcon = (icon: string) => {\n    if (icon === 'faUser') {\n      return <FontAwesomeIcon icon={faUser} />;\n    }\n    if (icon === 'connectdevelop') {\n      return <FontAwesomeIcon icon={faConnectdevelop} />;\n    }\n    if (icon === 'code-branch') {\n      return <FontAwesomeIcon icon={faCodeBranch} />;\n    }\n    if (icon === 'code') {\n      return null;\n    }\n    if (icon === 'graduation-cap') {\n      return <FontAwesomeIcon icon={faGraduationCap} />;\n    }\n    if (icon === 'not-found') {\n      return <FontAwesomeIcon icon={faExclamationTriangle} />;\n    }\n  };\n\n  return (\n    <>\n      <h1 className=\"large text-primary\">{title}</h1>\n      <p className=\"lead\">\n        {RenderIcon(icon)} {lead}\n      </p>\n    </>\n  );\n};\n\nexport default Header;\n","import React, {FC} from 'react';\nimport {Link} from 'react-router-dom';\nimport Routes from '../constants/routes';\nimport Header from '../components/Header';\n\n/**\n * Landing page\n */\nconst Landing: FC = () => (\n  <section className=\"landing\">\n    <div className=\"dark-overlay\">\n      <div className=\"landing-inner\">\n        <Header\n          title=\"DevBook\"\n          lead=\"Create developer profiles, portfolio, share and get help from other devs\"\n          icon=\"code\"\n        />\n        <div className=\"buttons\">\n          <Link to={Routes.SIGN_UP} className=\"btn btn-primary\">\n            Sign up\n          </Link>\n          <Link to={Routes.SIGN_IN} className=\"btn btn-light\">\n            Login\n          </Link>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n\nexport default Landing;\n","import {FC} from 'react';\n// Redux\nimport {compose} from '@reduxjs/toolkit';\nimport {connect} from 'react-redux';\nimport {withFirebase} from 'react-redux-firebase';\nimport {RootState} from '..';\n\n/** export firebase authentication */\nexport const selectAuthState = (state: RootState) => state.firebase.auth;\n/** export current user profile */\nexport const selectProfile = (state: RootState) => state.firebase.profile;\n/** subscribe to firebase and profile */\nexport const enhance = compose<FC>(connect(selectProfile), withFirebase);\n","import React, {FC} from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faExclamationTriangle} from '@fortawesome/free-solid-svg-icons';\n\ninterface IProps {\n  text: string;\n  color?: string;\n}\n\nconst Alert: FC<IProps> = ({text, color = 'danger'}) => (\n  <div className={`alert alert-${color}`}>\n    <FontAwesomeIcon icon={faExclamationTriangle} /> {text}\n  </div>\n);\n\nexport default Alert;\n","import {useState, ChangeEvent} from 'react';\n\n/**\n * provide onChange handler and reset function\n * T is the initFormData object type\n *\n * @param initFormData initial state of the form\n * @returns formData object,\n * @returns handleChange function to pass to input tag\n * @returns resetForm function to revert to initFormData\n * */\nconst useForm = <T>(initFormData: T) => {\n  const [formData, setFormData] = useState<T>(initFormData);\n\n  /** update each input state value onChange */\n  const handleChange = (\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>,\n  ): void =>\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n\n  /** clean form after successful submition */\n  const resetForm = () => setFormData(initFormData);\n\n  // /** update checkboxes TODO: do it better ...*/\n  const handleCheckboxesChange = (e: ChangeEvent<HTMLInputElement>): void =>\n    setFormData({...formData, [e.target.name]: e.target.checked});\n\n  return {formData, handleChange, handleCheckboxesChange, resetForm};\n};\n\nexport default useForm;\n","import Education from '../types/Education';\nimport Experience from '../types/Experience';\nimport Links from '../types/Links';\nimport Repo from '../types/Repo';\n\n/** Shorter dev interface */\nexport interface DevSummary {\n  id?: string;\n  displayName: string;\n  avatarUrl: string;\n  description: string;\n  status: string;\n  company: string;\n  location: string;\n  skills: string[];\n}\n\n/** Full developer profile information.\n * @extends DevSummary to avoid duplication\n */\ninterface IDev extends DevSummary {\n  isActive: boolean;\n  bio: string;\n  github: string;\n  links: Links;\n  experiences: Experience[];\n  educations: Education[];\n  repos: Repo[];\n}\n\nexport const getDescription = (status?: string, company?: string): string => {\n  if (status && company) return `${status} at ${company}`;\n  if (status) return status;\n  if (company) return `Employed at ${company}`;\n  return 'DevBook Member';\n};\n\n/** class implementing IDev.\n * No constructor is provided.\n * new Dev() returns a placeholder used when initializing a new profile.\n * id is not specified to not overwrite document uid.\n */\nexport class Dev implements IDev {\n  id?: string;\n  isActive = true;\n  displayName = '';\n  status = 'Developer';\n  company = '';\n  avatarUrl = '';\n  description = '';\n  location = '';\n  skills: string[] = [];\n  github: string = '';\n  links: Links = {\n    website: '',\n    instagram: '',\n    facebook: '',\n    linkedin: '',\n    twitter: '',\n    github: '',\n    youtube: '',\n  };\n  bio = '';\n  experiences: Experience[] = [];\n  educations: Education[] = [];\n  repos: Repo[] = [];\n}\n\n/**\n * sample Dev for development and tests\n */\nexport const dummyDev: IDev = {\n  id: '0',\n  isActive: true,\n  displayName: 'John Doe',\n  status: 'Developer',\n  company: 'Microsoft',\n  avatarUrl:\n    'https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?s=200',\n  description: 'Developer at Microsoft',\n  location: 'Seattle, WA',\n  skills: ['HTML', 'CSS', 'JavaScript', 'Python'],\n  github: '',\n  links: {\n    website: '#',\n    instagram: 'http://insta.com',\n    facebook: '#',\n    linkedin: '#',\n    twitter: '#',\n    github: '#',\n    youtube: '#',\n  },\n  bio:\n    'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Blanditiis unde quae vero enim adipisci voluptas magni sapiente reprehenderit error minima.',\n  experiences: [\n    {\n      id: 1,\n      company: 'Microsoft',\n      from: new Date(2011, 10),\n      to: 'Current',\n      position: 'Senior Developer',\n      location: 'USA',\n      description:\n        'Lorem ipsum dolor sit, amet consectetur adipisicing elit. Voluptas corrupti rem eius, accusantium ipsum vel eveniet magnam voluptatum? Minus, voluptatum!',\n    },\n    {\n      id: 0,\n      company: 'Sun Microsystems',\n      location: 'USA',\n      from: new Date(2004, 10),\n      to: new Date(2010, 11),\n      position: 'System Admin',\n      description:\n        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Repellendus at rem totam sed qui! Quas.',\n    },\n  ],\n  educations: [\n    {\n      id: 0,\n      school: 'University of Washington',\n      from: new Date(1993, 9),\n      to: new Date(1999, 6),\n      degree: 'Master',\n      field: 'Computer Science',\n      description:\n        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Repellendus at rem totam sed qui! Quas.',\n    },\n  ],\n  repos: [\n    {\n      name: 'Repo #1',\n      description:\n        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugit,deserunt.',\n      link: '#',\n      stars: 42,\n      watchers: 2,\n      forks: 4,\n    },\n    {\n      name: 'Repo #2',\n      description:\n        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugit,deserunt.',\n      link: '#',\n      stars: 21,\n      watchers: 1,\n      forks: 2,\n    },\n    {\n      name: 'Repo #3',\n      description:\n        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugit,deserunt.',\n      link: '#',\n      stars: 50,\n      watchers: 32,\n      forks: 12,\n    },\n  ],\n};\n\n/** dummy devSummary profiles for debug and development only */\nexport const developers: DevSummary[] = [\n  {\n    id: '0',\n    displayName: 'John Doe',\n    avatarUrl:\n      'https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?s=200',\n    description: 'Developer at Microsoft',\n    location: 'Seattle, WA',\n    skills: ['HTML', 'CSS', 'JavaScript', 'Python'],\n    status: 'Developer',\n    company: 'Microsoft',\n  },\n  {\n    id: '42',\n    displayName: 'Ruidy Nemausat',\n    avatarUrl:\n      'https://lh3.googleusercontent.com/a-/AOh14GhncH95MWKwPR3TRKy4eVd4n6w0-fobe4dhiam2xA',\n    description: 'Fullstack Engineer at DESY',\n\n    location: 'Hamburg, DE',\n    skills: ['React', 'TypeScript', 'Redux', 'Nodejs'],\n    status: 'Developer',\n    company: 'Microsoft',\n  },\n];\n\nexport default IDev;\n","import React, {FC, useState} from 'react';\n// Routing\nimport {Link, Redirect} from 'react-router-dom';\nimport Routes from '../constants/routes';\n// Redux\nimport {WithFirebaseProps} from 'react-redux-firebase';\nimport {enhance} from '../store/firebase';\nimport User, {newUser} from '../models/User';\n// Style\nimport GoogleButton from 'react-google-button';\nimport Alert from '../components/Alert';\nimport Header from '../components/Header';\n// Form\nimport useForm from '../hooks';\nimport {Dev} from '../models/Dev';\n\n// extends withFirebaseProps type to ad profile info\ninterface IProps extends Dev, WithFirebaseProps<User> {\n  isEmpty: boolean;\n  isLoaded: boolean;\n}\n\ninterface InitFormData {\n  name: string;\n  email: string;\n  password: string;\n  password2: string;\n}\n\n/**\n * Sign up form recieves firebase from withFirebase HOC\n */\nconst SignUp: FC<IProps> = ({firebase, isEmpty, isLoaded, isActive}) => {\n  const [error, setError] = useState<any>(null);\n\n  // handle form data\n  const initFormData: InitFormData = {\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  };\n\n  const {formData, handleChange, resetForm} = useForm<InitFormData>(\n    initFormData,\n  );\n\n  const {name, email, password, password2} = formData;\n\n  // prevent submitting invalid forms\n  const isDisabled: boolean = name === '' || email === '' || password === '';\n\n  /** create user with password */\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // pass the info to store into the second argument\n    firebase\n      .createUser({email, password}, newUser(name, email))\n      .then(() => {\n        firebase.updateProfile(new Dev(), {useSet: true, merge: true});\n        resetForm();\n      })\n      .catch(err => setError(err));\n  };\n\n  const loginWithGoogle = () =>\n    firebase\n      .login({provider: 'google', type: 'popup'})\n      .then(() => {\n        // updateProfile only if user does not already exists in db\n        const email = firebase.auth().currentUser?.email;\n        let exists: boolean = false;\n        firebase\n          .firestore()\n          .collection('users/')\n          .where('email', '==', email)\n          .get()\n          .then(docs =>\n            docs.forEach(doc => {\n              exists = doc.data().isActive !== undefined;\n            }),\n          )\n          .then(() => {\n            if (!exists)\n              firebase.updateProfile(new Dev(), {useSet: true, merge: true});\n          });\n      })\n      .catch(err => setError(err));\n\n  // redirect to dashboard if connected\n  if (isLoaded && !isEmpty && isActive) {\n    return <Redirect to={Routes.DASHBOARD} />;\n  }\n\n  return (\n    <section className=\"container\">\n      {error && <Alert text={error?.message} />}\n      <Header title=\"Sign Up\" lead=\"Create your account\" />\n      <GoogleButton type=\"light\" className=\"my-1\" onClick={loginWithGoogle} />\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <input\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            placeholder=\"Name\"\n            type=\"text\"\n            required\n            autoFocus\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            placeholder=\"Email Address\"\n            type=\"email\"\n            required\n          />\n          <small className=\"form-text\">\n            This site uses Gravatar, so use a Gravatar email.\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            placeholder=\"Password\"\n            type=\"password\"\n            minLength={6}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            name=\"password2\"\n            value={password2}\n            onChange={handleChange}\n            placeholder=\"Confirm Password\"\n            type=\"password\"\n            minLength={6}\n            required\n          />\n        </div>\n\n        <input\n          type=\"submit\"\n          value=\"Register\"\n          className=\"btn btn-primary\"\n          disabled={isDisabled}\n        />\n      </form>\n      <p className=\"my-1\">\n        Already have an account? <Link to={Routes.SIGN_IN}>Sign in</Link>\n      </p>\n    </section>\n  );\n};\n\n/** subscribe to store and firebase */\nexport default enhance(SignUp);\n","interface User {\n  displayName: string;\n  email: string;\n  avatarUrl: string;\n  createdAt: Date;\n}\n\n/** User constructor */\nexport const newUser = (\n  displayName: string,\n  email: string,\n  avatarUrl: string = '',\n): User => ({\n  displayName,\n  email,\n  avatarUrl,\n  createdAt: new Date(),\n});\n\nexport default User;\n","import React, {FC, useState} from 'react';\n// Redux\nimport {WithFirebaseProps} from 'react-redux-firebase';\nimport {enhance} from '../store/firebase';\n// Routing\nimport {Link, Redirect} from 'react-router-dom';\nimport Routes from '../constants/routes';\n// Style\nimport GoogleButton from 'react-google-button';\nimport Header from '../components/Header';\nimport Alert from '../components/Alert';\n// Typing\nimport User from '../models/User';\n// Form\nimport useForm from '../hooks';\nimport Dev from '../models/Dev';\n\ninterface InitFormData {\n  email: string;\n  password: string;\n}\n\ninterface IProps extends Dev, WithFirebaseProps<User> {\n  isEmpty: boolean;\n  isLoaded: boolean;\n}\n\n/**\n * Sign in form\n */\nconst SignIn: FC<IProps> = ({firebase, isEmpty, isLoaded, isActive}) => {\n  const [error, setError] = useState<any>(null);\n\n  // handle form data\n  const initFormData: InitFormData = {\n    email: '',\n    password: '',\n  };\n  const {formData, handleChange, resetForm} = useForm<InitFormData>(\n    initFormData,\n  );\n  const {email, password} = formData;\n\n  // prevent submitting invalid forms\n  const isDisabled: boolean = email === '' || password === '';\n\n  /** create user with password */\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    firebase\n      .login({email, password})\n      .then(() => resetForm())\n      .catch(err => setError(err));\n  };\n\n  const loginWithGoogle = () =>\n    firebase.login({provider: 'google', type: 'popup'});\n\n  // redirect to dashboard if connected\n  if (isLoaded && !isEmpty && isActive) {\n    return <Redirect to={Routes.DASHBOARD} />;\n  }\n\n  return (\n    <section className=\"container\">\n      {error && <Alert text={error?.message} />}\n      <Header title=\"Sign In\" lead=\"Sign into your account\" />\n      <GoogleButton type=\"light\" className=\"my-1\" onClick={loginWithGoogle} />\n      <form onSubmit={handleSubmit} className=\"form\">\n        <div className=\"form-group\">\n          <input\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            placeholder=\"Email Address\"\n            type=\"email\"\n            required\n            autoFocus\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            placeholder=\"Password\"\n            type=\"password\"\n            minLength={6}\n            required\n          />\n        </div>\n\n        <input\n          type=\"submit\"\n          value=\"Login\"\n          className=\"btn btn-primary\"\n          disabled={isDisabled}\n        />\n      </form>\n      <p className=\"my-1\">\n        Don't have an account? <Link to={Routes.SIGN_UP}>Sign up</Link>\n      </p>\n    </section>\n  );\n};\n\n/** subscribe to store and firebase */\nexport default enhance(SignIn);\n","import React, {FC} from 'react';\n// Routing\nimport {Link} from 'react-router-dom';\n// Style\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faCheck} from '@fortawesome/free-solid-svg-icons';\n// Typing\nimport {DevSummary, getDescription} from '../models/Dev';\nimport Routes from '../constants/routes';\n\n/**\n * Present a dev profile succintly. Redirect to dev profile on click.\n * @param props DevSummary object\n */\nconst DevProfile: FC<DevSummary> = ({\n  id,\n  displayName,\n  avatarUrl,\n  status,\n  company,\n  location,\n  skills,\n}) => (\n  <div className=\"profile bg-light\">\n    <img src={avatarUrl} alt={displayName} className=\"round-img\" />\n    <div>\n      <h2>{displayName}</h2>\n      <p>{getDescription(status, company)}</p>\n      <p>{location}</p>\n      <Link to={`${Routes.PROFILE}/${id}`} className=\"btn btn-primary\">\n        View Profile\n      </Link>\n    </div>\n    <ul>\n      {skills?.map((s, i) => (\n        <li className=\"text-primary\" key={i}>\n          <FontAwesomeIcon icon={faCheck} /> {s}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default DevProfile;\n","import React, {FC} from 'react';\n// Redux\nimport {compose} from 'redux';\nimport {connect} from 'react-redux';\nimport {firestoreConnect} from 'react-redux-firebase';\nimport {RootState} from '../store';\n// Style\nimport Header from '../components/Header';\nimport DevProfile from '../components/DevProfile';\nimport {DevSummary} from '../models/Dev';\n\ninterface IProps {\n  developers: DevSummary[];\n}\n/**\n * Developers list page\n */\nconst Developers: FC<IProps> = ({developers}) => (\n  <section className=\"container\">\n    <Header\n      title=\"Developers\"\n      lead=\"Browse and connect with developers\"\n      icon=\"connectdevelop\"\n    />\n    <div className=\"profiles\">\n      {/* use spread operator to pass props */}\n      {developers?.map(dev => (\n        <DevProfile key={dev.id} {...dev} />\n      ))}\n    </div>\n  </section>\n);\n\nexport default compose<FC>(\n  firestoreConnect(() => ['users']), // or { collection: 'users' }\n  connect((state: RootState, props) => ({\n    developers: state.firestore.ordered.users,\n  })),\n)(Developers);\n","import React, {FC} from 'react';\nimport {Link} from 'react-router-dom';\nimport Header from '../components/Header';\nimport Routes from '../constants/routes';\n\nconst NotFound: FC = () => (\n  <section className=\"not-found\">\n    <div className=\"dark-overlay\">\n      <div className=\"landing-inner\">\n        <Header\n          title=\"Nothing Here\"\n          lead=\"Sorry the page requested does not exist.\"\n          icon=\"not-found\"\n        />\n        <div className=\"buttons\">\n          <Link to={Routes.SIGN_UP} className=\"btn btn-primary\">\n            Sign up\n          </Link>\n          <Link to={Routes.SIGN_IN} className=\"btn btn-light\">\n            Login\n          </Link>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n\nexport default NotFound;\n","import moment from 'moment';\n\ntype TimePeriod = string | Date | 'Current';\n\n/** format exp date to be used */\nexport const parseDate = (date: TimePeriod): string => {\n  if (date === 'Current') {\n    return date;\n  }\n  return moment(date).format('MMM. YYYY');\n};\n\n/**\n * Formats a time period assignment: experience or education.\n * @param from Start of the assignment. Must be a Date\n * @param to End of the assignment. Can be \"Current\"\n */\nexport const getTimePeriod = (from: TimePeriod, to: TimePeriod): string =>\n  `${parseDate(from)} - ${parseDate(to)}`;\n\nexport default TimePeriod;\n","import React, {FC} from 'react';\n// Redux\nimport {compose} from '@reduxjs/toolkit';\nimport {firestoreConnect} from 'react-redux-firebase';\nimport {connect} from 'react-redux';\nimport {RootState} from '../store';\n// Routing\nimport {Link, useParams} from 'react-router-dom';\nimport Routes from '../constants/routes';\nimport NotFound from './NotFound';\n// Style\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {\n  faGithub,\n  faFacebook,\n  faInstagram,\n  faLinkedin,\n  faTwitter,\n  faYoutube,\n} from '@fortawesome/free-brands-svg-icons';\nimport {\n  faGlobe,\n  IconDefinition,\n  faCheck,\n  faStar,\n  faEye,\n  faCodeBranch,\n} from '@fortawesome/free-solid-svg-icons';\n// Typing\nimport IDev, {getDescription} from '../models/Dev';\nimport Experience from '../types/Experience';\nimport {getTimePeriod} from '../types/TimePeriod';\nimport Education from '../types/Education';\nimport Repo from '../types/Repo';\n\ninterface IProps {\n  dev: IDev;\n}\n\n/**\n * Dev personal profile as seen by other people.\n */\nconst Profile: FC<IProps> = ({dev}) => {\n  // display 404 page if dev is null\n  if (dev === null) {\n    return <NotFound />;\n  }\n\n  const fn = dev?.description;\n  console.log(fn);\n\n  /** return the icon corresponding to the social name */\n  const renderSocialIcon = (name: string): IconDefinition => {\n    switch (name) {\n      case 'facebook':\n        return faFacebook;\n      case 'github':\n        return faGithub;\n      case 'instagram':\n        return faInstagram;\n      case 'linkedin':\n        return faLinkedin;\n      case 'twitter':\n        return faTwitter;\n      case 'youtube':\n        return faYoutube;\n      default:\n        return faGlobe;\n    }\n  };\n\n  return dev === undefined ? (\n    <div>Loading ... </div>\n  ) : (\n    <section className=\"container\">\n      <Link to={Routes.DEVELOPERS} className=\"btn\">\n        Back to profiles\n      </Link>\n\n      <div className=\"profile-grid my-1\">\n        <div className=\"profile-top bg-primary p-2\">\n          <img\n            src={dev.avatarUrl}\n            alt={dev.displayName}\n            className=\"round-img my-1\"\n          />\n          <h1 className=\"large\">{dev.displayName}</h1>\n          <p className=\"lead\">{getDescription(dev.status, dev.company)}</p>\n          <p>{dev.location}</p>\n          <div className=\"icons my-1\">\n            {Object.entries(dev.links)\n              .sort()\n              .map(([icon, webAddress], i: number) => (\n                <a\n                  href={webAddress}\n                  key={i}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <FontAwesomeIcon icon={renderSocialIcon(icon)} size=\"2x\" />\n                </a>\n              ))}\n          </div>\n        </div>\n\n        <div className=\"profile-about bg-light p-2\">\n          <h2 className=\"text-primary\">{`${dev.displayName}'s Bio`}</h2>\n          <p>\n            {dev.bio.length === 0\n              ? 'Add a short bio to present yourself!'\n              : dev.bio}\n          </p>\n          <div className=\"line\"></div>\n          <h2 className=\"text-primary\">Skill Set</h2>\n          <div className=\"skills\">\n            {dev.skills.length === 0\n              ? 'Let us know about your skills!'\n              : dev.skills?.map((s: string, i: number) => (\n                  <div className=\"p-1\" key={i}>\n                    <FontAwesomeIcon icon={faCheck} /> {s}\n                  </div>\n                ))}\n          </div>\n        </div>\n\n        <div className=\"profile-exp bg-white p-2\">\n          <h2 className=\"text-primary\">Experiences</h2>\n          {dev.experiences.length === 0 ? (\n            <div>\n              <img\n                src={require('../static/img/404.jpg')}\n                alt=\"no experiences\"\n              />\n            </div>\n          ) : (\n            dev.experiences.map((exp: Experience, i: number) => (\n              <div key={i}>\n                <h3>{exp.company}</h3>\n                <p>{getTimePeriod(exp.from, exp.to)}</p>\n                <p>\n                  <strong>Position: </strong>\n                  {exp.position}\n                </p>\n                <p>\n                  <strong>Description: </strong>\n                  {exp.description}\n                </p>\n              </div>\n            ))\n          )}\n        </div>\n\n        <div className=\"profile-edu bg-white p-2\">\n          <h2 className=\"text-primary\">Education</h2>\n          {dev.educations.length === 0 ? (\n            <div>\n              <img src={require('../static/img/404.jpg')} alt=\"no educations\" />\n            </div>\n          ) : (\n            dev.educations.map((edu: Education, i: number) => (\n              <div key={i}>\n                <h3>{edu.school}</h3>\n                <p>{getTimePeriod(edu.from, edu.to)}</p>\n                <p>\n                  <strong>Degree: </strong>\n                  {edu.degree}\n                </p>\n                <p>\n                  <strong>Field: </strong>\n                  {edu.field}\n                </p>\n                <p>\n                  <strong>Description: </strong>\n                  {edu.description}\n                </p>\n              </div>\n            ))\n          )}\n        </div>\n\n        <div className=\"profile-github\">\n          <h2 className=\"text-primary my-1\">\n            <FontAwesomeIcon icon={faGithub} /> GitHub Repos\n          </h2>\n\n          {dev.repos?.length === 0 ? (\n            <div>\n              <img\n                src={require('../static/img/404.jpg')}\n                alt=\"no repositories\"\n              />\n            </div>\n          ) : (\n            dev.repos.map((r: Repo, i: number) => (\n              <div className=\"repo bg-white my-1 p-1\">\n                <div>\n                  <h4>\n                    <a href={r.link}>{r.name}</a>\n                  </h4>\n                  <p>{r.description}</p>\n                </div>\n                <div>\n                  <ul>\n                    <li className=\"badge badge-primary\">\n                      <FontAwesomeIcon icon={faStar} /> Stars: 42\n                    </li>\n                    <li className=\"badge badge-dark\">\n                      <FontAwesomeIcon icon={faEye} /> Watchers: 2\n                    </li>\n                    <li className=\"badge badge-light\">\n                      <FontAwesomeIcon icon={faCodeBranch} /> Forks: 4\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\n/**\n * Container to fetch id params from thr URI and pass it to Profile page\n */\nconst ProfileContainer: FC = () => {\n  const {id} = useParams();\n\n  const Component = compose<FC>(\n    firestoreConnect(() => [`users/${id}`]),\n    connect(({firestore: {data}}: RootState) => ({\n      dev: data.users && data.users[id],\n    })),\n  )(Profile);\n\n  return <Component />;\n};\n\nexport default ProfileContainer;\n","import React, {FC} from 'react';\nimport Header from './Header';\n\ninterface IProps {\n  title: string;\n  lead: string;\n  icon?: string;\n}\n\n/** Header component displayed on form pages */\nconst FormHeader: FC<IProps> = props => (\n  <>\n    <Header {...props} />\n    <small>* marks required fields</small>\n  </>\n);\n\nexport default FormHeader;\n","const Statuses: string[] = [\n  'Developer',\n  'Junior Developer',\n  'Senior Developer',\n  'Manager',\n  'Student or Learning',\n  'Instructor or Teacher',\n  'Intern',\n  'Other',\n];\n\nexport default Statuses;\n","interface Links {\n  website: string;\n  instagram: string;\n  facebook: string;\n  linkedin: string;\n  twitter: string;\n  github: string;\n  youtube: string;\n}\n\n/**\n * ensure link is formatted as http(s)//:...\n * @param link URI to process\n */\nexport const parseLink = (link: string): string => {\n  if (link.slice(0, 4) === 'http') {\n    return link;\n  } else {\n    return `http://${link}`;\n  }\n};\n\n/**\n * @param githubUsername\n */\nexport const getGithubLink = (githubUsername: string) =>\n  `https://github.com/${githubUsername}`;\n\nexport default Links;\n","interface IAlert {\n  show: boolean;\n  color: string;\n  text: string;\n}\n\n/** standard alert displaying form status after submission */\nexport const formAlert: IAlert = {\n  show: false,\n  color: 'danger',\n  text: 'Something went wrong',\n};\n\nexport default IAlert;\n","import React, {FC, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport Routes from '../constants/routes';\n// Redux\nimport {enhance} from '../store/firebase';\nimport {WithFirebaseProps} from 'react-redux-firebase';\n// Style\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {\n  faTwitter,\n  faFacebook,\n  faYoutube,\n  faLinkedin,\n  faInstagram,\n} from '@fortawesome/free-brands-svg-icons';\nimport FormHeader from '../components/FormHeader';\nimport Alert from '../components/Alert';\nimport Statuses from '../constants/statuses';\n// Form\nimport useForm from '../hooks';\n// Typing\nimport Dev from '../models/Dev';\nimport User from '../models/User';\nimport Links, {parseLink, getGithubLink} from '../types/Links';\nimport IAlert, {formAlert} from '../types/Alert';\n\ninterface FormData {\n  status: string;\n  company: string;\n  website: string;\n  location: string;\n  skills: string;\n  github: string;\n  bio: string;\n  facebook: string;\n  linkedin: string;\n  instagram: string;\n  twitter: string;\n  youtube: string;\n}\n\ninterface IProps extends Dev, WithFirebaseProps<User> {}\n\n/**\n * Form to update dev's personal information.\n */\nconst EditProfile: FC<IProps> = ({\n  firebase,\n  status,\n  skills,\n  company,\n  links,\n  location,\n  bio,\n  github,\n}) => {\n  const [showLinks, setShowLinks] = useState(false);\n  const [alert, setAlert] = useState<IAlert>(formAlert);\n\n  const initFormData = {\n    status: status ?? 'Developer',\n    company: company,\n    location: location ?? '',\n    bio: bio ?? '',\n    skills: skills?.toString() ?? '',\n    website: links?.website ?? '',\n    github: github ?? '',\n    facebook: links?.facebook ?? '',\n    linkedin: links?.linkedin ?? '',\n    instagram: links?.instagram ?? '',\n    twitter: links?.twitter ?? '',\n    youtube: links?.youtube ?? '',\n  };\n\n  const {formData, handleChange} = useForm<FormData>(initFormData);\n\n  /** construct profile object from formData */\n  const makeProfile = ({\n    status,\n    company,\n    location,\n    bio,\n    website,\n    instagram,\n    facebook,\n    linkedin,\n    twitter,\n    github,\n    youtube,\n    skills,\n  }: FormData) => {\n    const newLinks: Links = {\n      website: parseLink(website),\n      instagram: parseLink(instagram),\n      facebook: parseLink(facebook),\n      linkedin: parseLink(linkedin),\n      twitter: parseLink(twitter),\n      github: getGithubLink(github),\n      youtube: parseLink(youtube),\n    };\n    const newSkills: string[] = skills?.split(',');\n    return {\n      status,\n      company,\n      location,\n      bio,\n      github,\n      links: newLinks,\n      skills: newSkills,\n    };\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n    const updatedDev = makeProfile(formData);\n    try {\n      firebase.updateProfile(updatedDev, {useSet: true, merge: true});\n      setAlert({\n        show: true,\n        color: 'success',\n        text:\n          'Profile successfully updated. You may go back to your dashboard.',\n      });\n    } catch (err) {\n      setAlert({...alert, show: true});\n    }\n  };\n\n  const isDisabled: boolean = formData.status === '' || formData.skills === '';\n\n  const toggleSocialLinks = () => setShowLinks(!showLinks);\n  return (\n    <section className=\"container\">\n      <FormHeader\n        title=\"Edit your profile\"\n        lead=\"Let's get some information to make your profile stand out\"\n      />\n\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <select\n            name=\"status\"\n            required\n            onChange={handleChange}\n            defaultValue={formData.status}\n          >\n            <option disabled>* Select Professional Status</option>\n            {Statuses.map((s: string, i: number) => (\n              <option value={s} key={i}>\n                {s}\n              </option>\n            ))}\n          </select>\n          <small className=\"form-text\">\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Company\"\n            name=\"company\"\n            value={formData.company}\n            // value={variable}\n            onChange={handleChange}\n          />\n          <small className=\"form-text\">\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Website\"\n            name=\"website\"\n            value={formData.website}\n            onChange={handleChange}\n          />\n          <small className=\"form-text\">\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            value={formData.location}\n            onChange={handleChange}\n          />\n          <small className=\"form-text\">\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Skills\"\n            name=\"skills\"\n            required\n            value={formData.skills}\n            onChange={handleChange}\n          />\n          <small className=\"form-text\">\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"github\"\n            value={formData.github}\n            onChange={handleChange}\n          />\n          <small className=\"form-text\">\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            placeholder=\"A short bio of yourself\"\n            name=\"bio\"\n            value={formData.bio}\n            onChange={handleChange}\n          ></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button\n            type=\"button\"\n            className=\"btn btn-light\"\n            onClick={toggleSocialLinks}\n          >\n            {showLinks ? 'Hide' : 'Add'} Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {showLinks && (\n          <>\n            <div className=\"form-group social-input\">\n              <FontAwesomeIcon icon={faFacebook} size=\"2x\" />\n              <input\n                type=\"text\"\n                placeholder=\"Facebook URL\"\n                name=\"facebook\"\n                value={formData.facebook}\n                onChange={handleChange}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <FontAwesomeIcon icon={faInstagram} size=\"2x\" />\n              <input\n                type=\"text\"\n                placeholder=\"Instagram URL\"\n                name=\"instagram\"\n                value={formData.instagram}\n                onChange={handleChange}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <FontAwesomeIcon icon={faLinkedin} size=\"2x\" />\n              <input\n                type=\"text\"\n                placeholder=\"Linkedin URL\"\n                name=\"linkedin\"\n                value={formData.linkedin}\n                onChange={handleChange}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <FontAwesomeIcon icon={faTwitter} size=\"2x\" />\n              <input\n                type=\"text\"\n                placeholder=\"Twitter URL\"\n                name=\"twitter\"\n                value={formData.twitter}\n                onChange={handleChange}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <FontAwesomeIcon icon={faYoutube} size=\"2x\" />\n              <input\n                type=\"text\"\n                placeholder=\"YouTube URL\"\n                name=\"youtube\"\n                value={formData.youtube}\n                onChange={handleChange}\n              />\n            </div>\n          </>\n        )}\n        {alert.show && <Alert text={alert.text} color={alert.color} />}\n        <input\n          type=\"submit\"\n          className=\"btn btn-primary my-1\"\n          value=\"Submit\"\n          disabled={isDisabled}\n        />\n        <Link to={Routes.DASHBOARD} className=\"btn btn-light my-1\">\n          Go Back\n        </Link>\n      </form>\n    </section>\n  );\n};\n\nexport default enhance(EditProfile);\n","import React, {FC, MouseEvent} from 'react';\n// Redux\nimport {WithFirebaseProps} from 'react-redux-firebase';\nimport {enhance} from '../store/firebase';\n// Routing\nimport {Link} from 'react-router-dom';\nimport Routes from '../constants/routes';\n// Style\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {\n  faUserCircle,\n  faGraduationCap,\n  faUserSlash,\n} from '@fortawesome/free-solid-svg-icons';\nimport {faBlackTie} from '@fortawesome/free-brands-svg-icons';\nimport Header from '../components/Header';\n// Types\nimport Dev from '../models/Dev';\nimport User from '../models/User';\nimport Experience from '../types/Experience';\nimport {getTimePeriod} from '../types/TimePeriod';\nimport Education from '../types/Education';\n\ninterface IProps extends Dev, WithFirebaseProps<User> {}\n/**\n * Main page from which a Dev can peek and edit its own profile.\n */\nconst Dashboard: FC<IProps> = ({\n  firebase,\n  displayName,\n  experiences,\n  educations,\n}) => {\n  /** turns account to inactive then logs user out */\n  const deleteAccount = () => {\n    firebase.updateProfile({isActive: false}, {useSet: true, merge: true});\n    firebase.logout();\n  };\n\n  /**\n   *\n   * @param id key of the entry to remove\n   * @param entries array of credential educations\n   */\n  const deleteEduEntry = (id: number, entries: Education[]) => (\n    e: MouseEvent<HTMLButtonElement>,\n  ) => {\n    firebase.updateProfile({\n      educations: entries.filter((e: Education) => e.id !== id),\n    });\n  };\n  /**\n   *\n   * @param id key of the entry to remove\n   * @param entries array of credential experiences\n   */\n  const deleteExpEntry = (id: number, entries: Experience[]) => (\n    e: MouseEvent<HTMLButtonElement>,\n  ) => {\n    firebase.updateProfile({\n      experiences: entries.filter((e: Experience) => e.id !== id),\n    });\n  };\n\n  return (\n    <section className=\"container\">\n      <Header title=\"Dashboard\" lead={`Welcome ${displayName}`} />\n      <div className=\"dash-buttons\">\n        <Link to={Routes.EDIT_PROFILE} className=\"btn btn-light\">\n          <FontAwesomeIcon icon={faUserCircle} /> Edit Profile\n        </Link>\n        <Link to={Routes.ADD_EXPERIENCE} className=\"btn btn-light\">\n          <FontAwesomeIcon icon={faBlackTie} /> Add Experience\n        </Link>\n        <Link to={Routes.ADD_EDUCATION} className=\"btn btn-light\">\n          <FontAwesomeIcon icon={faGraduationCap} /> Add Education\n        </Link>\n      </div>\n\n      <h2 className=\"my-2\">Experience Credentials</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>Company</th>\n            <th className=\"hide-sm\">Title</th>\n            <th className=\"hide-sm\">Years</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {experiences?.map((exp: Experience) => (\n            <tr key={exp.id}>\n              <td>{exp.company}</td>\n              <td className=\"hide-sm\">{exp.position}</td>\n              <td className=\"hide-sm\">{getTimePeriod(exp.from, exp.to)}</td>\n              <td>\n                <button\n                  className=\"btn btn-danger\"\n                  onClick={deleteExpEntry(exp.id, experiences)}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <h2 className=\"my-2\">Education Credentials</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>School</th>\n            <th className=\"hide-sm\">Degree</th>\n            <th className=\"hide-sm\">Years</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {educations?.map((edu: Education, i: number) => (\n            <tr key={edu.id}>\n              <td>{edu.school}</td>\n              <td className=\"hide-sm\">{edu.degree}</td>\n              <td className=\"hide-sm\">{getTimePeriod(edu.from, edu.to)}</td>\n              <td>\n                <button\n                  className=\"btn btn-danger\"\n                  onClick={deleteEduEntry(edu.id, educations)}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className=\"my-2\">\n        <button className=\"btn btn-danger\" onClick={deleteAccount}>\n          <FontAwesomeIcon icon={faUserSlash} /> Delete my Account\n        </button>\n      </div>\n    </section>\n  );\n};\n\nexport default enhance(Dashboard);\n","import React, {FC, useState, FormEvent} from 'react';\n// Routing\nimport {Link} from 'react-router-dom';\nimport Routes from '../constants/routes';\n// Redux\nimport {WithFirebaseProps} from 'react-redux-firebase';\nimport {enhance} from '../store/firebase';\n// Style\nimport FormHeader from '../components/FormHeader';\nimport Alert from '../components/Alert';\n// Typing\nimport Dev from '../models/Dev';\nimport User from '../models/User';\nimport IAlert, {formAlert} from '../types/Alert';\nimport Experience from '../types/Experience';\nimport {parseDate} from '../types/TimePeriod';\n// Form\nimport useForm from '../hooks';\n\ninterface FormData {\n  position: string;\n  company: string;\n  location: string;\n  from: string;\n  to: string;\n  current: boolean;\n  description: string;\n}\n\ninterface IProps extends Dev, WithFirebaseProps<User> {}\n\n/**\n * Form to add an Experience step to Profile\n */\nconst AddExperience: FC<IProps> = ({firebase, experiences}) => {\n  const [alert, setAlert] = useState<IAlert>(formAlert);\n\n  const initFormData: FormData = {\n    position: '',\n    company: '',\n    location: '',\n    from: '',\n    to: '',\n    current: false,\n    description: '',\n  };\n  const {formData, handleChange, handleCheckboxesChange, resetForm} = useForm<\n    FormData\n  >(initFormData);\n\n  const isDisabled: boolean =\n    formData.position === '' || formData.company === '';\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n    const makeExperience = ({\n      position,\n      company,\n      from,\n      location,\n      to,\n      current,\n      description,\n    }: FormData): Experience => {\n      if (current) to = 'Current';\n      const newExp: Experience = {\n        id: experiences.length,\n        position,\n        company,\n        location,\n        from: parseDate(from),\n        to: parseDate(to),\n        description,\n      };\n      return newExp;\n    };\n    const newExp = makeExperience(formData);\n\n    try {\n      firebase.updateProfile(\n        {experiences: [...experiences, newExp]},\n        {useSet: true, merge: true},\n      );\n      setAlert({\n        show: true,\n        color: 'success',\n        text:\n          'Profile successfully updated. You may continue or go back to your dashboard.',\n      });\n      resetForm();\n    } catch (err) {\n      setAlert({...alert, show: true});\n    }\n  };\n\n  return (\n    <section className=\"container\">\n      <FormHeader\n        title=\"Add An Experience\"\n        lead=\"Add any developer/programming\n        positions that you have had in the past\"\n        icon=\"code-branch\"\n      />\n\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Job Title\"\n            name=\"position\"\n            required\n            value={formData.position}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Company\"\n            name=\"company\"\n            required\n            value={formData.company}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            value={formData.location}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <h4>From Date</h4>\n          <input\n            type=\"date\"\n            name=\"from\"\n            value={formData.from}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <h4>To Date</h4>\n          <input\n            type=\"date\"\n            name=\"to\"\n            value={formData.to}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <p>\n            <input\n              type=\"checkbox\"\n              name=\"current\"\n              checked={formData.current}\n              onChange={handleCheckboxesChange}\n            />{' '}\n            Current Job\n          </p>\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            name=\"description\"\n            cols={30}\n            rows={5}\n            placeholder=\"Job Description\"\n            value={formData.description}\n            onChange={handleChange}\n          ></textarea>\n        </div>\n        {alert.show && <Alert text={alert.text} color={alert.color} />}\n        <input\n          type=\"submit\"\n          className=\"btn btn-primary my-1\"\n          value=\"Submit\"\n          disabled={isDisabled}\n        />\n        <Link className=\"btn btn-light my-1\" to={Routes.DASHBOARD}>\n          Go Back\n        </Link>\n      </form>\n    </section>\n  );\n};\n\nexport default enhance(AddExperience);\n","import React, {FC, useState, FormEvent} from 'react';\n// Routing\nimport {Link} from 'react-router-dom';\nimport Routes from '../constants/routes';\n// Redux\nimport {WithFirebaseProps} from 'react-redux-firebase';\nimport {enhance} from '../store/firebase';\n// Style\nimport FormHeader from '../components/FormHeader';\nimport Alert from '../components/Alert';\n// Typing\nimport Dev from '../models/Dev';\nimport User from '../models/User';\nimport IAlert, {formAlert} from '../types/Alert';\nimport Education from '../types/Education';\nimport {parseDate} from '../types/TimePeriod';\n// Form\nimport useForm from '../hooks';\n\ninterface FormData {\n  school: string;\n  degree: string;\n  field: string;\n  from: string;\n  to: string;\n  current: boolean;\n  description: string;\n}\n\ninterface IProps extends Dev, WithFirebaseProps<User> {}\n/**\n * Form to add an Education step to Profile\n */\nconst AddEducation: FC<IProps> = ({firebase, educations}) => {\n  const [alert, setAlert] = useState<IAlert>(formAlert);\n\n  const initFormData: FormData = {\n    school: '',\n    degree: '',\n    field: '',\n    from: '',\n    to: '',\n    current: false,\n    description: '',\n  };\n  const {formData, handleChange, handleCheckboxesChange, resetForm} = useForm<\n    FormData\n  >(initFormData);\n\n  const isDisabled: boolean = formData.school === '' || formData.degree === '';\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n    const makeEducation = ({\n      school,\n      degree,\n      from,\n      field,\n      to,\n      current,\n      description,\n    }: FormData): Education => {\n      if (current) to = 'Current';\n      const newEdu: Education = {\n        id: educations.length,\n        school,\n        degree,\n        field,\n        from: parseDate(from),\n        to: parseDate(to),\n        description,\n      };\n      return newEdu;\n    };\n    const newEdu = makeEducation(formData);\n\n    try {\n      firebase.updateProfile(\n        {educations: [...educations, newEdu]},\n        {useSet: true, merge: true},\n      );\n      setAlert({\n        show: true,\n        color: 'success',\n        text:\n          'Profile successfully updated. You may continue or go back to your dashboard.',\n      });\n      resetForm();\n    } catch (err) {\n      setAlert({...alert, show: true});\n    }\n  };\n\n  return (\n    <section className=\"container\">\n      <FormHeader\n        title=\"Add Your Education\"\n        lead=\"Add any school, bootcamp, etc that\n        you have attended\"\n        icon=\"graduation-cap\"\n      />\n\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* School or Bootcamp\"\n            name=\"school\"\n            value={formData.school}\n            onChange={handleChange}\n            required\n            autoFocus\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Degree or Certificate\"\n            name=\"degree\"\n            value={formData.degree}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Field Of Study\"\n            name=\"field\"\n            value={formData.field}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <h4>From Date</h4>\n          <input\n            type=\"date\"\n            name=\"from\"\n            value={formData.from}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <h4>To Date</h4>\n          <input\n            type=\"date\"\n            name=\"to\"\n            value={formData.to}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <p>\n            <input\n              type=\"checkbox\"\n              name=\"current\"\n              checked={formData.current}\n              onChange={handleCheckboxesChange}\n            />{' '}\n            Current School\n          </p>\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            name=\"description\"\n            cols={30}\n            rows={5}\n            placeholder=\"Program Description\"\n            value={formData.description}\n            onChange={handleChange}\n          ></textarea>\n        </div>\n        {alert.show && <Alert text={alert.text} color={alert.color} />}\n        <input\n          type=\"submit\"\n          className=\"btn btn-primary my-1\"\n          value=\"Submit\"\n          disabled={isDisabled}\n        />\n        <Link className=\"btn btn-light my-1\" to={Routes.DASHBOARD}>\n          Go Back\n        </Link>\n      </form>\n    </section>\n  );\n};\n\nexport default enhance(AddEducation);\n","import Comment from '../types/Comment';\n\n/**\n * Post send by a dev\n */\ninterface Post {\n  id: string;\n  userID: string;\n  name: string;\n  text: string;\n  picture: string;\n  likes: string[];\n  comments: Comment[];\n  //   date: Date;\n}\n\n/**\n * sample Post for development and tests\n */\nexport const dummyPost: Post = {\n  id: '12',\n  userID: '42',\n  picture:\n    'https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?s=200',\n  name: 'John Doe',\n  text:\n    'Lorem ipsum dolor sit amet consectetur adipisicing elit. Sint possimus corporis sunt necessitatibus! Minus nesciunt soluta suscipit nobis. Amet accusamus distinctio cupiditate blanditiis dolor? Illo perferendis eveniet cum cupiditate aliquam?',\n  comments: [\n    {\n      picture:\n        'https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?s=200',\n      name: 'John Doe',\n      text:\n        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Sintpossimus corporis sunt necessitatibus! Minus nesciunt solutasuscipit nobis. Amet accusamus distinctio cupiditate blanditiis dolor? Illo perferendis eveniet cum cupiditate aliquam?',\n    },\n    {\n      picture:\n        'https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?s=200',\n      name: 'Ruidy Nemo',\n      text:\n        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Sintpossimus corporis sunt necessitatibus! Minus nesciunt solutasuscipit nobis. Amet accusamus distinctio cupiditate blanditiis dolor? Illo perferendis eveniet cum cupiditate aliquam?',\n    },\n  ],\n  likes: ['0', '42'],\n};\n\nexport default Post;\n","import React, {FC} from 'react';\nimport Post, {dummyPost as post} from '../models/Post';\nimport Comment from '../types/Comment';\n\n/**\n * Display a Post and the related comments. Shows a form to add a comment.\n */\nconst PostPage: FC<Post> = () => (\n  <section className=\"container\">\n    <a href=\"posts.html\" className=\"btn btn-light\">\n      Back To Posts\n    </a>\n\n    <div className=\"post bg-white p-1 my-1\">\n      <div>\n        <a href=\"profile.html\">\n          <img className=\"round-img\" src={post.picture} alt={post.name} />\n          <h4>{post.name}</h4>\n        </a>\n      </div>\n      <div>\n        <p className=\"my-1\">{post.text}</p>\n      </div>\n    </div>\n\n    <div className=\"post-form\">\n      <div className=\"post-form-header bg-primary\">\n        <h3>Leave A Comment</h3>\n      </div>\n      <form className=\"form my-1\">\n        <textarea\n          name=\"text\"\n          cols={30}\n          rows={5}\n          placeholder=\"Comment on this post\"\n        ></textarea>\n        <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\n      </form>\n    </div>\n\n    <div className=\"posts\">\n      {post.comments.map((c: Comment, i: number) => (\n        <div className=\"post bg-white p-1 my-1\" key={i}>\n          <div>\n            <a href=\"profile.html\">\n              <img className=\"round-img\" src={c.picture} alt={c.name} />\n              <h4>{c.name}</h4>\n            </a>\n          </div>\n          <div>\n            <p className=\"my-1\">{c.text}</p>\n          </div>\n        </div>\n      ))}\n    </div>\n  </section>\n);\n\nexport default PostPage;\n","import React, {FC} from 'react';\nimport Post, {dummyPost as post} from '../models/Post';\nimport Header from '../components/Header';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faThumbsUp, faThumbsDown} from '@fortawesome/free-solid-svg-icons';\n\n/**\n * A Dev's Posts list\n */\nconst Posts: FC = () => {\n  const posts: Post[] = [post, post];\n\n  return (\n    <section className=\"container\">\n      <Header title=\"Posts\" lead=\"Welcome to the community\" />\n      <div className=\"post-form\">\n        <div className=\"post-form-header bg-primary\">\n          <h3>Say Something</h3>\n        </div>\n\n        <form className=\"form my-1\">\n          <textarea cols={30} rows={5} placeholder=\"Create a post\"></textarea>\n          <input type=\"submit\" value=\"Submit\" className=\"btn btn-dark my-1\" />\n          <div className=\"posts\">\n            {posts.map((post: Post) => (\n              <div className=\"post bg-white p-1 my-1\" key={post.id}>\n                <div>\n                  <a href=\"profile.html\">\n                    <img\n                      src={post.picture}\n                      alt={post.name}\n                      className=\"round-img\"\n                    />\n                    <h4>{post.name}</h4>\n                  </a>\n                </div>\n                <div>\n                  <p className=\"my-1\">{post.text}</p>\n                  <button className=\"btn btn-light\">\n                    <FontAwesomeIcon icon={faThumbsUp} /> {post.likes.length}\n                  </button>\n                  <button className=\"btn btn-light\">\n                    <FontAwesomeIcon icon={faThumbsDown} />\n                  </button>\n                  <a href=\"post.html\" className=\"btn btn-primary\">\n                    Discussion\n                  </a>\n                </div>\n              </div>\n            ))}\n          </div>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nexport default Posts;\n","import React, {FC} from 'react';\n// Routing\nimport {Route, Redirect} from 'react-router-dom';\nimport Routes from '../constants/routes';\n// Redux\nimport {isLoaded, isEmpty} from 'react-redux-firebase';\nimport {useSelector} from 'react-redux';\nimport {RootState} from '../store';\n\ninterface IProps {\n  exact?: boolean;\n  path: string;\n  component: React.FC<any>;\n}\n/**\n * Redirects to the login screen if you're not authenticated yet or\n * if auth is not loaded yet\n */\nconst PrivateRoute: FC<IProps> = ({\n  component: Component,\n  exact,\n  path,\n  ...rest\n}) => {\n  const auth = useSelector((state: RootState) => state.firebase.auth);\n  const profile = useSelector((state: RootState) => state.firebase.profile);\n  const isActive = profile.isActive;\n  return (\n    <Route\n      exact={exact}\n      path={path}\n      {...rest}\n      render={({location, ...rest}) =>\n        isLoaded(auth) && !isEmpty(auth) && isActive ? (\n          <Component {...rest} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: Routes.SIGN_IN,\n              state: {from: location},\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\n/** subscribe to store and firebase */\nexport default PrivateRoute;\n","import React, {FC} from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport Landing from '../pages/Landing';\nimport SignUp from '../pages/SignUp';\nimport SignIn from '../pages/SignIn';\nimport Developers from '../pages/Developers';\nimport Profile from '../pages/Profile';\nimport EditProfile from '../pages/EditProfile';\nimport Dashboard from '../pages/Dashboard';\nimport AddExperience from '../pages/AddExperience';\nimport AddEducation from '../pages/AddEducation';\nimport PostPage from '../pages/Post';\nimport Posts from '../pages/Posts';\nimport NotFound from '../pages/NotFound';\nimport Routes from '../constants/routes';\nimport PrivateRoute from './PrivateRoute';\n\n/** Register navigation paths accessible */\nconst Router: FC = () => (\n  <Switch>\n    <Route exact path={Routes.LANDING} component={Landing} />\n    <Route exact path={Routes.SIGN_UP} component={SignUp} />\n    <Route exact path={Routes.SIGN_IN} component={SignIn} />\n    <Route exact path={Routes.DEVELOPERS} component={Developers} />\n    <Route exact path={`${Routes.PROFILE}/:id`} component={Profile} />\n    <PrivateRoute exact path={Routes.EDIT_PROFILE} component={EditProfile} />\n    <PrivateRoute exact path={Routes.DASHBOARD} component={Dashboard} />\n    <PrivateRoute\n      exact\n      path={Routes.ADD_EXPERIENCE}\n      component={AddExperience}\n    />\n    <PrivateRoute exact path={Routes.ADD_EDUCATION} component={AddEducation} />\n    <PrivateRoute exact path={Routes.POST} component={PostPage} />\n    <PrivateRoute exact path={Routes.POSTS} component={Posts} />\n    <Route component={NotFound} />\n  </Switch>\n);\n\nexport default Router;\n","import React, {FC} from 'react';\n// Routing\nimport {Link} from 'react-router-dom';\nimport Routes from '../constants/routes';\n//Redux\nimport {WithFirebaseProps} from 'react-redux-firebase';\nimport {enhance} from '../store/firebase';\n// Style\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faCode, faSignOutAlt, faUser} from '@fortawesome/free-solid-svg-icons';\n// Typing\nimport User from '../models/User';\nimport Dev from '../models/Dev';\n\ninterface IProps extends Dev, WithFirebaseProps<User> {\n  isEmpty: boolean;\n  isLoaded: boolean;\n}\n\n/**\n * Main Navbar serves navigation Routes.\n */\nconst NavBar: FC<IProps> = ({firebase, isEmpty, isLoaded, isActive}) => {\n  const publicLinks = (\n    <ul data-testid=\"publicLinks\">\n      <li>\n        <Link to={Routes.DEVELOPERS} data-testid=\"devsLink\">\n          Developers\n        </Link>\n      </li>\n      <li>\n        <Link to={Routes.SIGN_UP} data-testid=\"signupLink\">\n          Register\n        </Link>\n      </li>\n      <li>\n        <Link to={Routes.SIGN_IN} data-testid=\"loginLink\">\n          Login\n        </Link>\n      </li>\n    </ul>\n  );\n\n  const privateLinks = (\n    <ul data-testid=\"privateLinks\">\n      <li>\n        <Link to={Routes.DEVELOPERS} data-testid=\"devsLink\">\n          Developers\n        </Link>\n      </li>\n      <li>\n        <Link to={Routes.POSTS} data-testid=\"postsLink\">\n          Posts\n        </Link>\n      </li>\n      <li>\n        <Link to={Routes.DASHBOARD} data-testid=\"dashboardLink\">\n          <FontAwesomeIcon icon={faUser} />\n          <span className=\"hide-sm\"> Dashboard</span>\n        </Link>\n      </li>\n      <li>\n        <Link\n          to={Routes.SIGN_IN}\n          data-testid=\"logoutLink\"\n          onClick={() => firebase.logout()}\n        >\n          <FontAwesomeIcon icon={faSignOutAlt} />\n          <span className=\"hide-sm\"> Log out</span>\n        </Link>\n      </li>\n    </ul>\n  );\n\n  /** Display appropriated links after loading given authenticated prop */\n  const RenderLinks =\n    isLoaded && !isEmpty && isActive ? privateLinks : publicLinks;\n\n  return (\n    <nav className=\"navbar bg-dark\">\n      <h1>\n        <Link to={Routes.LANDING} data-testid=\"homeLink\">\n          <FontAwesomeIcon icon={faCode} /> DevBook\n        </Link>\n      </h1>\n      {RenderLinks}\n    </nav>\n  );\n};\n\n/** connect HOC subscribes to the store */\nexport default enhance(NavBar);\n","// Redux\nimport {configureStore} from '@reduxjs/toolkit';\n// Firebase\nimport {\n  firebaseReducer,\n  FirebaseReducer,\n  FirestoreReducer,\n} from 'react-redux-firebase';\nimport {firestoreReducer} from 'redux-firestore';\n// Typing\nimport {Schema} from './firebase/config';\nimport Dev from '../models/Dev';\n\nconst store = configureStore({\n  reducer: {\n    firebase: firebaseReducer,\n    firestore: firestoreReducer,\n  },\n});\n\n// State type\nexport interface RootState {\n  firebase: FirebaseReducer.Reducer<Dev, Schema>;\n  firestore: FirestoreReducer.Reducer;\n}\n\nexport default store;\n","//Firebase\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst CONFIG = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DB_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MSG_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\n\n// initialize firebase services\nfirebase.initializeApp(CONFIG);\nfirebase.firestore();\n\nexport default firebase;\n","// Redux\nimport {createFirestoreInstance} from 'redux-firestore';\nimport store from '..';\n// Firebase\nimport firebase from '../../services/firebase';\n// Typing\nimport Dev from '../../models/Dev';\n\n// react-redux-firebase config\nconst RRF_CONFIG = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n};\n// object required by RRFProvider\nconst rrfProps = {\n  firebase,\n  config: RRF_CONFIG,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\n// Firestore Schema\nexport interface Schema {\n  devs: Dev;\n}\n\nexport default rrfProps;\n","import React, {FC} from 'react';\n// Routing\nimport {BrowserRouter} from 'react-router-dom';\nimport Router from './router/Router';\nimport NavBar from './components/NavBar';\n// Redux\nimport {Provider, useSelector} from 'react-redux';\nimport store from './store';\n// Firebase\nimport {ReactReduxFirebaseProvider, isLoaded} from 'react-redux-firebase';\nimport rrfProps from './store/firebase/config';\nimport {selectAuthState} from './store/firebase';\n\n/**\n * Main App container\n * Redux provides state management\n * RRF to bind to Firebase\n * */\nconst App: FC = () => {\n  return (\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <BrowserRouter>\n          <AuthApp />\n        </BrowserRouter>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  );\n};\n\n/**\n * Display a loading screen while fetching authentication state\n */\nconst AuthApp: FC = () => {\n  const auth = useSelector(selectAuthState);\n  if (!isLoaded(auth)) {\n    // TODO: insert Splash Screen here\n    return <div>Loading...</div>;\n  }\n  return (\n    <>\n      <NavBar />\n      <Router />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './static/css/style.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}